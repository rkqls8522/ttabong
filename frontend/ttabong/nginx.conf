user  nginx;
worker_processes  auto;
error_log  /var/log/nginx/error.log debug;  # 로그 레벨을 debug로 설정

pid        /var/run/nginx.pid;

events {
    worker_connections  1024;
}
http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    log_format main '$remote_addr - $remote_user [$time_local] '
                    '"$request" $status $body_bytes_sent '
                    '"$http_referer" "$http_user_agent"';

    access_log /var/log/nginx/access.log main;
    error_log  /var/log/nginx/error.log debug;  # 로그 레벨을 debug로 설정

    sendfile        on;
    keepalive_timeout  65;

    upstream spring {
        server springdeploy:8080;  # 백엔드 컨테이너 (internal network)
    }

    # Let’s Encrypt 인증을 위한 HTTP-01 챌린지 처리
    server {
        listen 80;
        server_name ttabong.store www.ttabong.store;

        # 인증서 발급을 위한 challenge 경로 처리
        location /.well-known/acme-challenge/ {
            root /var/www/certbot;  # Certbot이 파일을 생성할 디렉토리
        }

        # 인증서 발급 후, HTTP에서 HTTPS로 리디렉션
        #location / {
        #    return 301 https://$host$request_uri;
        #}
        # React SPA 라우팅
        location / {
            root /usr/share/nginx/html; 
            index index.html;
            try_files $uri $uri/ /index.html;  # 수정된 부분
        }

        # favicon.ico 요청을 별도로 처리
        location = /favicon.ico {
            log_not_found off;
            access_log off;
        }

        # Spring 백엔드 API 요청을 프록시
        location /api/ {
            proxy_pass http://springdeploy:8080;  # 백엔드 Spring 서비스로 프록시
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
    }

    ##  HTTPS 서버 블록 (인증서 발급 후 활성화)
    server {
        listen 443 ssl;
        server_name ttabong.store www.ttabong.store;

        ssl_certificate /etc/letsencrypt/live/ttabong.store/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/ttabong.store/privkey.pem;

        # React SPA 라우팅
        location / {
            root /usr/share/nginx/html; 
            index index.html;
            try_files $uri $uri/ /index.html;  # 수정된 부분
        }

        # favicon.ico 요청을 별도로 처리
        location = /favicon.ico {
            log_not_found off;
            access_log off;
        }

        # Spring 백엔드 API 요청을 프록시
        location /api/ {
            proxy_pass http://springdeploy:8080;  # 백엔드 Spring 서비스로 프록시
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
    }

    # 기본 fallback 서버 블록 (HTTP 리디렉션만 처리)
    #server {
    #    listen 80 default_server;
    #    server_name _;

        # HTTP 요청을 HTTPS로 리디렉션
    #    location / {
    #        return 301 https://$host$request_uri;
    #    }
    #}
}
